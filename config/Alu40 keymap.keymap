/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC/~ |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // | TAB   |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |RET/SFT|
            // | PLAY  | LCTL | LALT | LGUI | LOWR |     SPACE    |  RAIS | LARW | UARW | DARW  |  RARW |

            bindings = <
&gresc            &kp Q      &kp W     &kp E     &kp R  &kp T      &kp Y      &kp U  &kp I      &kp O     &kp P         &kp BSPC
&kp TAB           &kp A      &kp S     &kp D     &kp F  &kp G      &kp H      &kp J  &kp K      &kp L     &kp SEMI      &kp SQT
&kp LSHFT         &kp Z      &kp X     &kp C     &kp V  &kp B      &kp N      &kp M  &kp COMMA  &kp DOT   &kp FSLH      &mt RSHFT RET
&kp LC(UP_ARROW)  &kp LCTRL  &kp LALT  &kp LGUI  &mo 1  &kp SPACE  &kp SPACE  &mo 2  &kp LEFT   &kp DOWN  &kp UP_ARROW  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower {
            bindings = <
&kp GRAVE         &trans            &trans             &trans             &trans           &trans  &trans  &kp LS(KP_N7)    &kp LS(KP_N8)  &kp LS(KP_N9)  &kp EQUAL     &kp DEL
&kp C_PLAY_PAUSE  &kp C_PREVIOUS    &kp C_NEXT         &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans  &kp KP_N4        &kp KP_N5      &kp KP_N6      &kp MINUS     &kp PIPE
&trans            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans             &trans           &trans  &trans  &kp KP_N1        &kp KP_N2      &kp KP_N3      &kp ASTERISK  &trans
&trans            &trans            &trans             &trans             &trans           &trans  &trans  &kp KP_NUMBER_0  &kp DOT        &kp SLASH      &kp ENTER     &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        raise {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4   &kp N5   &kp N6   &kp N7  &kp N8  &kp N9  &kp N0     &kp MINUS
&trans     &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6   &trans  &trans  &trans  &kp EQUAL  &kp BSLH
&trans     &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &trans     &trans
&trans     &trans  &trans  &trans  &mo 3    &trans   &trans   &trans  &trans  &trans  &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

        control {
            bindings = <
&sys_reset       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans  &trans  &trans      &trans  &trans  &bt BT_CLR
&rgb_ug RGB_ON   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &trans  &trans  &trans      &trans  &trans  &trans
&rgb_ug RGB_OFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans  &trans  &trans      &trans  &trans  &trans
&bootloader      &trans           &trans           &trans           &trans           &trans           &trans  &trans  &bt BT_PRV  &trans  &trans  &bt BT_NXT
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };
    };
};
